- name: Install dependencies
  become: true
  block:
    - name: Install required packages
      ansible.builtin.dnf:
        name:
          - binutils
          - sbsigntools
          - systemd-boot
          - openssl
          - python3-pip
          - python3-virtualenv
          - python3-setuptools

    - name: Install python libraries
      ansible.builtin.pip:
        name: pexpect

- name: Create Machine Owner Keys
  become: true
  block:
    - name: Create private key and certificate # noqa inline-env-var
      ansible.builtin.command:
        argv:
          - openssl
          - req
          - -new
          - -x509
          - -newkey
          - rsa:2048
          - -keyout
          - "{{ uki_config_mok_key_path }}"
          - -out
          - "{{ uki_config_mok_crt_path }}"
          - -nodes
          - -days
          - "3650"
          - -subj
          - "/CN={{ uki_config_mok_name }}/"
        creates: "{{ uki_config_kernel_install_config_root }}/MOK.*"

    - name: Set permissions on certificate
      ansible.builtin.file:
        path: "{{ uki_config_mok_crt_path }}"
        mode: '0600'
        owner: root
        group: root
        seuser: system_u
        serole: object_r
        setype: etc_t

    - name: Set permissions on private key
      ansible.builtin.file:
        path: "{{ uki_config_mok_key_path }}"
        mode: '0600'
        owner: root
        group: root
        seuser: system_u
        serole: object_r
        setype: etc_t

    - name: Derive public certificate # noqa inline-env-var
      ansible.builtin.command:
        argv:
          - openssl
          - x509
          - -in
          - "{{ uki_config_mok_crt_path }}"
          - -out
          - "{{ uki_config_mok_cer_path }}"
          - -outform
          - DER
        creates: "{{ uki_config_mok_cer_path }}"

    - name: Set permissions on public cert
      ansible.builtin.file:
        path: "{{ uki_config_mok_cer_path }}"
        mode: '0644'
        owner: root
        group: root
        seuser: system_u
        serole: object_r
        setype: etc_t

- name: Enroll MOK
  vars:
    enrolled: "{{ lookup('ansible.builtin.pipe', 'mokutil --list-enrolled') }}"
    new: "{{ lookup('ansible.builtin.pipe', 'mokutil --list-new') }}"
  block:
    - name: Get MOK password
      register: mok_password_prompt
      ansible.builtin.pause:
        prompt: Enter MOK password
        echo: false
      when:
        - enrolled is not ansible.builtin.search(uki_config_mok_name)
        - new is not ansible.builtin.search(uki_config_mok_name)

    - name: Import MOK
      become: true
      ansible.builtin.expect:
        command: "mokutil --import {{ uki_config_mok_cer_path }}"
        responses:
          .*: "{{ mok_password_prompt.user_input }}"
      register: mok_import
      when:
        - enrolled is not ansible.builtin.search(uki_config_mok_name)
        - new is not ansible.builtin.search(uki_config_mok_name)
      notify:
        - MokManager warning
        - Reboot prompt

- name: Configure kernel-install to generate UKIs
  become: true
  block:
    - name: Set the install layout to UKI
      community.general.ini_file:
        path: "{{ uki_config_kernel_install_config_root }}/install.conf"
        option: layout
        value: uki
        mode: '0644'
        owner: root
        group: root
        seuser: system_u
        serole: object_r
        setype: etc_t

    - name: Configure kernel-install to use dracut as the initrd generator
      community.general.ini_file:
        path: "{{ uki_config_kernel_install_config_root }}/install.conf"
        option: initrd_generator
        value: "{{ uki_config_initrd_generator }}"
        mode: '0644'
        owner: root
        group: root
        seuser: system_u
        serole: object_r
        setype: etc_t

    - name: Configure kernel-install to use dracut as the UKI generator
      community.general.ini_file:
        path: "{{ uki_config_kernel_install_config_root }}/install.conf"
        option: "uki_generator"
        value: "{{ uki_config_uki_generator }}"
        mode: '0644'
        owner: root
        group: root
        seuser: system_u
        serole: object_r
        setype: etc_t

- name: Configure dracut to sign generated UKIs
  become: true
  block:
    - name: Set signing certificate
      community.general.ini_file:
        path: "{{ uki_config_dracut_conf_dir }}/uki.conf"
        option: uefi_secureboot_cert
        value: "{{ uki_config_mok_crt_path }}"
        mode: '0644'
        owner: root
        group: root
        seuser: system_u
        serole: object_r
        setype: etc_t

    - name: Set signing private key
      community.general.ini_file:
        path: "{{ uki_config_dracut_conf_dir }}/uki.conf"
        option: uefi_secureboot_key
        value: "{{ uki_config_mok_key_path }}"
        mode: '0644'
        owner: root
        group: root
        seuser: system_u
        serole: object_r
        setype: etc_t
